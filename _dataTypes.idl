module ccReg {

  const string SET_NULL_VALUE = "$$SET_NULL_VALUE$$" ; /// definice stringu ktery udela SQL update a vlozi NULL hodnotu

  /// Typ pro vyjádření datumu a času podle rfc3339
  /** YYYY-MM-DD  (jen datum)
   *  YYYY-MM-DDTHH:MM:SS.ssZ 
   *  (datum a čas v UTC zulu time sec. na 2 des. místa)
   *  YYYY-MM-DDTHH:MM:SS.ss(+/-)HH:MM 
   *  (datum a čas plus offset časové zóny, sec. na 2 des. místa)  
   */
  typedef string timestamp;
  /// Typ pro datum ve formátu YYYY-MM-DD  
  typedef string date;
  /// Typ pro seznam názvů nameserverů
  typedef sequence < string > NameServers;
  /// Typ pro seznam identifikátorů technických kontaktů
  typedef sequence < string > TechContact;
  /// Typ pro obecný seznam řetězců
  typedef sequence < string > Lists;
  /// Typ pro seznam IP adres
  typedef sequence < string > InetAddress;
  /// Typ pro jeden prvek seznamu záznamů pro jednotlivé nameservery
  struct DNSHost_str
  {
    string fqdn; ///< Fqdn DNS serveru
    InetAddress inet; ///< Pole IP adres 
  };
  /// Typ pro seznam záznamů jednotlivých nameserverů
  typedef sequence < DNSHost_str > DNSHost;
  
  /// Structure for handling day
  struct DateType {
    short day; ///< day of month (1..31)
    short month; ///< month in year (1..12)
    short year; ///< year (i.e. 2006)
  };
  
  /// Structure for handling interval of days
  struct DateInterval {
    DateType from; ///< start of interval - Date(0,0,0) means ignore this field
    DateType to; ///< end of interval - Date(0,0,0) means ignore this field 
  };
  
  /// Structure for handling date and time
  struct DateTimeType {
    DateType date;
    short hour; ///< hour (0..23)
    short minute; ///< minute (0..59)
    short second; ///< second (0..59)
  };
  
  /// Structure for handling interval of times
  struct DateTimeInterval {
    DateTimeType from; ///< start of interval 
    DateTimeType to; ///< end of interval
  };

};
