module ccReg {
  typedef unsigned long price; // pro credit cena na cele cislo v halirich

  // detail registratora
  struct Registrar {
     long id;
     string handle;
     string name;
     string organization;
     string street1;
     string street2;
     string street3;
     string city;
     string stateorprovince;
     string postalcode;
     string country;
     string telephone;
     string fax;
     string email;
     string url;
     price credit; 
  };

  // typ seznamu registratoru 
  typedef sequence<Registrar> RegistrarList;

  /// classification for register object handle
  enum CheckHandleClass {
    CH_ENUM_BAD_ZONE, ///< handle is enum number not managed in this register
 	CH_ENUM, ///< handle is enum number
 	CH_DOMAIN_PART, ///< handle is single string (appended by default domain)
 	CH_DOMAIN_BAD_ZONE, ///< hadnle is domain not managed in this register
 	CH_DOMAIN_LONG, ///< handle is domain longer then allowed (truncated)
 	CH_DOMAIN, ///< handle is domain
 	CH_NSSET, ///< handle is nsset
 	CH_CONTACT, ///< handle is contact 
 	CH_INVALID ///< not a valid handle
  };
  
  /// return type for checkHandle
  struct CheckHandleType {
    string newHandle; ///< transformed handle if appropriate
    CheckHandleClass handleClass; ///< result of handle classification
  };

  // administratorske rozhrani
  interface Admin
  {
    exception ObjectNotFound {};
    // vrati kompletni seznam registratoru
    RegistrarList getRegistrars();
    // najde jednoho registratora
    Registrar getRegistrarByHandle(in string handle) raises (ObjectNotFound);

    // List funkce na vypis
    Lists ListRegistrar(); 
    Lists ListDomain(); 
    Lists ListContact(); 
    Lists ListNSSet(); 
    
    /// classify input handle according register rules
    void  checkHandle(in string handle, out CheckHandleType ch);
  };
};
