// IDL rozhrani pro volani CORBA funkci
// interfaces: EPP , Whois , Admin

module ccReg
{
typedef unsigned long long timestamp;

enum AddrType { IPv4 , IPv6 };
// typy funkci pro transfer
enum TransferFunc{ Approve , Cancel , Query , Reject , Request } ;
enum StatusToken { OK , Linked , 
                  clientDeleteProhibited ,
                  clientUpdateProhibited,
                  pendingCreate, 
                  pendingDelete,
                  pendingTransfer,
                  serverDeleteProhibited,
                  serverUpdateProhibited };

// vracena struktura 

struct Response{
short errCode; // chybove hlasnei
string errMsg; // chybova zprava
};

typedef  sequence<string> NameServers;
typedef  sequence<string> InetAddress;
// typedef  sequence<short> Status; // musel jsem predelat na short
typedef short Status;

struct Contact{
string ROID;    // identifikator kontaktu  repository ID
string ClID;    // identifikator registratora ktery ma pravo na zmeny
string CrID;    // identifikator registratora ktery vytvoril kontak
string UpID;    // identifikator registratora ktery provedl zmeny
Status stat; // status sequence
timestamp CrDate; // datum a cas vytvoreni
timestamp UpDate; // datum a cas zmeny
timestamp TrDate;  // datum a cas transferu
string Name; // jmeno nebo nazev kontaktu
string Organization; // nazev organizace
string Street1; // adresa
string Street2; // adresa
string Street3; // adresa
string City;  // obec
string StateOrProvince;
string PostalCode; // PSC
string Country; // kod zeme ISO dve pismena velke
string Telephone;
string Fax;
string Email;
string NotifyEmail; // upozornovaci email
string VAT; // DIC 
string SSN; // SSN
string AuthInfoPw ; // autentifikace
boolean DiscloseName; // povolovani zobrazeni
boolean DiscloseOrganization;
boolean DiscloseAddress;
boolean DiscloseTelephone;
boolean DiscloseFax;
boolean DiscloseEmail;
};

// struktura pro popis hostu
struct Host{
string domain; // domena do ktere patri host
string name; // fqdn nazev domeny
Status stat; // status sequence
timestamp CrDate; // datum vytvoreni
timestamp UpDate; // datum zmeny
string ClID;    // identifikator registratora ktery vytvoril host
string UpID;    // identifikator registratora ktery zmenil zaznam
InetAddress inet; // sequence ip adres
};

// struktura pro popis domen
struct Domain{
string ROID; 
string name; // fqdn nazev domeny
string Registrant; // ROID registranta contactu
Status stat; // status sequence
string ClID;    // identifikator registratora ktery ma pravo na zemnu
string CrID;    // identifikator registratora ktery zaznam vytvoril 
string UpID;    // identifikator registratora ktery zmenil zaznam
timestamp CrDate; // datum a cas vytvoreni
timestamp ExDate; // taum a cas expirace domeny
timestamp TrDate;  // datum a cas transferu
string AuthInfoPw ; // autentifikace
NameServers ns; //  sequence nameservru
};

// pro klienty EPP  protokolu 
interface EPP{

   // pro prihlaseni clienta 
   Response  ClientLogin(in string ClID);
   Response  ClientLogout();

   // zjisteni kontaktaktu
   Response  ContactCheck( in  string roid  );
   // info o kontaktni osobe
   Response  ContactInfo(  in  string roid  , out Contact c );
   // vymazani kontaktni osoby 
   Response  ContactDelete( in  string roid  );
   // zmena udaju u kontaktni osoby 
   Response  ContactUpdate( in Contact c  );  
   // vytvoreni kontaktni osoby 
   Response  ContactCreate( in Contact c  );
   // Funkce pro transfer kontaktu typ funkce nezadana


   // check hostu
   Response  HostCheck( in string name  );
   // info o hostu
   Response  HostInfo( in string name , out Host h );
   // smazani hostu
   Response  HostDelete( in string name );
   // vytvoreni hostu
   Response  HostCreate( in Host h );
   // zmena udaju update
   Response  HostUpdate( in Host h );

   // nasleduji funkce na spravu domen
   Response  DomainCheck( in string name  );
   Response  DomainInfo( in string name , out Domain d );
   Response  DomainDelete( in string name );
   Response  DomainUpdate( in Domain d );
   Response  DomainCreate( in Domain d );
//  transfer zatim nezadan  Response  DomainTransfer(



};

// struktura
struct DomainWhois{
string name;
// string description; // popis domeny ted tam je 
Status stat; // status sequence
timestamp created;
timestamp expired;
// technicke kontakty
// specifikovat co je potreba zverejnit pres whois
string registrarName;  // jmeno registratora
string registrarUrl; // odkaz na jeho webovou adresu
NameServers ns; // sequnce nameservru
};

interface Whois{
    // vraci identifikaci domeny pro whois server podle nazvu
    DomainWhois Domain( in string  domain_name );
};


// administratorske rozhrani
interface Admin{

};

};
