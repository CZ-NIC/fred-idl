module ccReg {

  /// List identifikatoru attachmentu
  typedef sequence < long > Attachment_seq;

  /// Tabulka ID typu emailu, nazev typu emailu
  struct MailTypeCode
  {
    long id;
    string name;
  };
  typedef sequence < MailTypeCode > MailTypeCodes;

  /// Struktura pro zadani hodnot do hlavicky emailu
  struct MailHeader
  {
    string h_to;
    string h_from;
    string h_cc;
    string h_bcc;
    string h_reply_to;
    string h_errors_to;
    string h_organization;
  };
  /// Struktura klic-hodnota
  struct KeyValue
  {
    string key;
    string value;
  };
  /// Seznam paru klic-hodnota
  typedef sequence <KeyValue> KeyValues;
  /// Struktura plne popisujici polozku z mail archivu
  struct Mail
  {
    long mailid; ///< Id mailu (prvni cislo pred teckou v message-id header)
    long mailtype; ///< Typ mailu (pouzity pri jeho vytvoreni)
    timestamp crdate; ///< Datum vlozeni polozky do archivu
    timestamp moddate;///< Datum posledni modifikace statusu polozky
    long status; ///< Status (0 = OK, jinak primo chyba sendmailu)
    string content; ///< Obsah mailu se vsim vsudy bez binarnich priloh
    Lists handles; ///< List asociovanych handlu k mailu
    Attachment_seq attachments; ///< Nazvy binarnich priloh
  };
  /// Filter na vyhledavani v mail archivu
  struct MailFilter
  {
    long mailid; ///< Vyhledavej podle id mailu (neaktivni pokud je -1)
    long mailtype; ///< Typ emailu (neaktivni pokud je -1)
    long status; ///< Vyhledavej podle statusu (neaktivni pokud je -1)
    string handle; ///< Vyhledavej podle asociovaneho handlu (neaktivni pokud je prazdny string)
    long attachid; ///< Vyhledavej podle attachmentu (neaktivni pokud je -1)
    DateTimeInterval crdate; ///< Vyhledavej podle datumu vytvoreni.
    string fulltext; ///< Vyhledava podle stringu v emailu (neaktivni pokud je prazdny string)
  };
  typedef sequence < Mail > MailList;

  /// Objekt zpristupnujici vysledky vyhledavani
  interface MailSearch
  {
    /** Vyjimka pro pripad zavazne interni chyby (napr. chyba databaze). */
    exception InternalError {
      string message; ///< Popis chyby
    };
    /** Vyjimka pokud search object neni jiz aktivni. */
    exception NotActive {
    };
    /**
     Vrati stanoveny pocet polozek z vysledku vyhledavani vyhovujicich filtru
     z konstruktoru.
     \param count Pocet polozek (mailu), ktere se maji vratit.
     \return Seznam vyslednych mailu.
     */
    MailList getNext(in long count) raises (InternalError, NotActive);
    /**
     Zrusi vyhledavaci objekt na strane serveru.
     */
    void destroy() raises (InternalError);
  };

  /// RozhranÃ­ pro Mailer
  interface Mailer
  {
    /** Vyjimka pro pripad zavazne interni chyby (napr. chyba databaze,
        sendmailu). */
    exception InternalError {
      string message; ///< Popis chyby
    };
    /// Neznamy typ emailu
    exception UnknownMailType {
        string typename;
    };
    /// Attachment nenalezen
    exception AttachmentNotFound {
        long attachid;
    };
    /// Chyba pri odesilani mailu
    exception SendMailError {
    };
    /// Zformatuje a rozesle zpravu
    /**
     \param mailtype Name of email type.
     \param header Hodnoty do hlavicky mailu, prebijejici defaulty.
     \param data Pary klic-hodnota urcujici vstupni data pro templaty.
     \param handles Handly kontaktu asociovanych se zpravou.
     \param attachs ID attachmentu.
     \param preview Pokud true, tak se nic neposle ani nearchivuje a vysledna
            zprava se vrati jako string.
     \param msgPreview Pokud je preview true vrati se vysledny mail, ktery by
            se poslal, jinak se vrati prazdny string.
     \return ID of email.
    */
    long mailNotify(
		    in string mailtype,
                    in MailHeader header,
                    in KeyValues data,
                    in Lists handles,
                    in Attachment_seq attachs,
                    in boolean preview,
                    out string msgPreview
                    ) raises (
                       InternalError,
                       UnknownMailType,
                       AttachmentNotFound,
                       SendMailError
                    );

    /**
     Vyhleda data dle zadaneho filtru.
     Vraceny objekt se pouziva pro pristup k datum.
     \param filter Filter podle ktereho se ridi vyhledavani v archivu.
     \return Object ktery zpristupnuje vysledky vyhledavani.
     */
    MailSearch createSearchObject(in MailFilter filter) raises (InternalError);

    /**
     Vrati ciselnik typu emailu.
     \return Ciselnik typu emailu
     */
    MailTypeCodes getMailTypes() raises (InternalError);
  };

};
