#ifndef WHOIS_IDL_15354554
#define WHOIS_IDL_15354554

#include "NullableTypes.idl"

module Registry
{
module Whois
{
    // utils
    typedef sequence<string> StringSeq;
    valuetype DisclosableString string ;

    struct PlaceAddress {
        string street1;
        string street2;
        string street3;
        string city;
        string stateorprovince;
        string postalcode;
        string country_code;
    };
    valuetype DisclosablePlaceAddress PlaceAddress;

    struct ObjectStatusDesc {
      string handle;
      string name;
    };
    typedef sequence<ObjectStatusDesc> ObjectStatusDescSeq;

    // output structures

    struct Registrar {
        string          handle;
        string          organization;
        string          url;
        string          phone;
        PlaceAddress    address;
    };
    valuetype NullableRegistrar Registrar;

    struct Domain {
        string              handle;
        string              registrant_handle;
        StringSeq           admin_contact_handles;
        NullableString      nsset_handle;
        NullableString      keyset_handle;
        string              registrar_handle;
        StringSeq           statuses;
        DateTime            registered;
        NullableDateTime    changed;
        NullableDateTime    last_transfer;
        Date                expire;
        NullableDate        validated_to;
    };
    typedef sequence<Domain> DomainSeq;
    valuetype NullableDomain Domain;

    struct ContactIdentification {
        // should be together because it's visibility is controlled by single disclose flag
        string identification_type;
        string identification_data;
    };
    valuetype DisclosableContactIdentification ContactIdentification;

    struct Contact {
        string                              handle;
        DisclosableString                   organization;
        DisclosableString                   name;
        DisclosablePlaceAddress             address;
        DisclosableString                   phone;
        DisclosableString                   fax;
        DisclosableString                   email;
        DisclosableString                   notify_email;
        DisclosableString                   vat_number;
        DisclosableContactIdentification    identification;
        string                              creating_registrar_handle;
        string                              sponsoring_registrar_handle;
        DateTime                            created;
        NullableDateTime                    changed;
        NullableDateTime                    last_transfer;
        StringSeq                           statuses;
    };
    typedef sequence<Contact> ContactSeq;
    valuetype NullableContact Contact;

    struct NSSet {
        string              handle;
        StringSeq           nservers;
        StringSeq           tech_contact_handles;
        string              registrar_handle;
        DateTime            created;
        NullableDateTime    changed;
        NullableDateTime    last_transfer;
        StringSeq           statuses;
    };
    typedef sequence<NSSet> NSSetSeq;
    valuetype NullableNSSet NSSet;

    struct DNSKey {
        short   flags;
        short   protocol;
        short   alg;
        string  public_key;
    };
    typedef sequence<DNSKey> DNSKeySeq;

    struct KeySet {
        string              handle;
        DNSKeySeq           dns_keys;
        StringSeq           tech_contact_handles;
        string              registrar_handle;
        DateTime            created;
        NullableDateTime    changed;
        NullableDateTime    last_transfer;
        StringSeq           statuses;
    };
    typedef sequence<KeySet> KeySetSeq;
    valuetype NullableKeySet KeySet;

    exception INTERNAL_SERVER_ERROR {};

    interface WhoisIntf
    {
        NullableRegistrar   get_registrar_by_handle( in string handle ) raises (INTERNAL_SERVER_ERROR);

        NullableContact     get_contact_by_handle( in string handle ) raises (INTERNAL_SERVER_ERROR);

        NullableNSSet   get_nsset_by_handle(    in string handle) raises (INTERNAL_SERVER_ERROR);
        NSSetSeq        get_nssets_by_ns(       in string handle) raises (INTERNAL_SERVER_ERROR);
        NSSetSeq        get_nssets_by_tech_c(   in string handle) raises (INTERNAL_SERVER_ERROR);

        NullableKeySet  get_keyset_by_handle(   in string handle) raises (INTERNAL_SERVER_ERROR);
        KeySetSeq       get_keysets_by_tech_c(  in string handle) raises (INTERNAL_SERVER_ERROR);

        NullableDomain  get_domain_by_handle(           in string handle) raises (INTERNAL_SERVER_ERROR);
        DomainSeq       get_domains_by_registrant(      in string handle) raises (INTERNAL_SERVER_ERROR);
        DomainSeq       get_domains_by_admin_contact(   in string handle) raises (INTERNAL_SERVER_ERROR);
        DomainSeq       get_domains_by_nsset(           in string handle) raises (INTERNAL_SERVER_ERROR);
        DomainSeq       get_domains_by_keyset(          in string handle) raises (INTERNAL_SERVER_ERROR);


        ObjectStatusDescSeq get_domain_status_descriptions(  in string lang) raises (INTERNAL_SERVER_ERROR);
        ObjectStatusDescSeq get_contact_status_descriptions( in string lang) raises (INTERNAL_SERVER_ERROR);
        ObjectStatusDescSeq get_nsset_status_descriptions(   in string lang) raises (INTERNAL_SERVER_ERROR);
        ObjectStatusDescSeq get_keyset_status_descriptions(  in string lang) raises (INTERNAL_SERVER_ERROR);
    };
};
};

#endif
