#ifndef LOGGER_IDL_
#define LOGGER_IDL_


#include "_dataTypes.idl"
#include "Admin.idl"

module ccReg {
    interface Logger {
        exception SESSION_NOT_EXISTS {};
        exception REQUEST_NOT_EXISTS {};
        exception REQUEST_TYPE_NOT_EXITS {};
        exception RESPONSE_CODE_NOT_EXISTS {};
        exception OBJECT_TYPE_NOT_EXISTS {};
        exception INTERNAL_SERVER_ERROR {};
        exception LIMITS_EXCEEDED {};
        exception OBJECT_NOT_FOUND {};

        typedef sequence< string > ObjectTypeList;

        /* session_id is optional parameter */
        TID createRequest(in string source_ip, in RequestServiceType serv,
                      in string content, in RequestProperties props,
                      in ObjectReferences refs, in RequestType action_type,
                      in TID session_id)
                      raises (INTERNAL_SERVER_ERROR);

        /* session_id is optional parameter */
        void closeRequest(in TID id, in string content, in RequestProperties props,
                      in ObjectReferences refs, in long result_code, in TID session_id)
                      raises (INTERNAL_SERVER_ERROR, REQUEST_NOT_EXISTS);

        TID createSession (in TID user_id, in string user_name)
                      raises (INTERNAL_SERVER_ERROR);

        void closeSession (in TID id)
                      raises (INTERNAL_SERVER_ERROR, SESSION_NOT_EXISTS);

        RequestTypeList getRequestTypesByService(in RequestServiceType serv)
                      raises (INTERNAL_SERVER_ERROR);

        RequestServiceList getServices()
                      raises (INTERNAL_SERVER_ERROR);

        ResultCodeList getResultCodesByService(in RequestServiceType serv)
                      raises (INTERNAL_SERVER_ERROR);

        ObjectTypeList getObjectTypes()
                      raises (INTERNAL_SERVER_ERROR);
    };
};

#endif
