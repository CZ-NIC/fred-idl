module Register {

  /// date structure
  struct Date {
    int day; ///< day of month (1..31)
    int month; ///< month in year (1..12)
    int year; ///< year (i.e. 2006)
  };
  
  /// date interval
  struct DateInteval {
    Date from; ///< start of interval - Date(0,0,0) means ignore this field
    Date to; ///< end of interval - Date(0,0,0) means ignore this field 
  };
 
  /// filtr structure for domain selection
  struct DomainFilter {
    long registrar; ///< domain is registred by this registrar
    long registrant; ///< domain belongs to this registrant
    long nsset; ///< domain referes to this nsset
    long admin; ///< domain 
    string nameRegexp; ///< regular expresion for matching domain name
    DateInterval expDate; ///< interval for domain expiration date
    DateInterval crDate; ///< interval for domain creation date
    DateInterval trDate; ///< interval for domain transfer date
    DateInterval valExDate; ///< interval for enum domain validation exp. date
  };
  
  /// Typ pro detail domény
  struct Domain {
    string name; ///< Název domény
  };

  /// Typ pro seznam domén
  typedef sequence<Domain> DomainList;
  
  /// Typ pro detail kontaktu
  struct Contact {
    string handle; ///< Identifikátor
  };

  /// Typ pro seznam kontaktů
  typedef sequence<Contact> ContactList;

  /// Typ pro detail nssetu
  struct NSSet {
    string handle; ///< Identifikátor
  };

  /// Typ pro seznam nssetů
  typedef sequence<NSSet> NSSetList;
  
  /// Detail registrátora
  struct Registrar {
    long id; ///< ID
    string handle; ///< Identifkátor
    string name; ///< Jméno
    string organization; ///< Název organizace
    string street1; ///< Adresa 1
    string street2; ///< Adresa 2
    string street3; ///< Adresa 3
    string city; ///< Město
    string stateorprovince; ///< Kraj
    string postalcode; ///< PSČ
    string country; ///< Kód země
    string telephone; ///< Telefonní číslo
    string fax; ///< Faxové číslo
    string email; ///< Kontaktní email
    string url; ///< URL 
    price credit; ///< Aktuální víše kreditu
  };

  /// Typ pro výpis seznamu registrátorů
  typedef sequence<Registrar> RegistrarList;

  /// administratorske rozhrani
  interface Admin
  {
    /// Vyjímka vracená v případě nenalezení hledaného objektu
    exception ObjectNotFound {};
    /// vrati kompletni seznam registratoru
    RegistrarList getRegistrars();
    /// najde jednoho registratora
    Registrar getRegistrarByHandle(in string handle) raises (ObjectNotFound);
    /// vypise seznam domen podle zadaneho filtru
    DomainList getDomainList(in DomainFiltr filtr);
    /// vypise seznam domen podle zadaneho filtru
    NSSetList getNSSetList(in NSSetFiltr filtr);
    /// vypise seznam domen podle zadaneho filtru
    ContactList getContactList(in ContactFiltr filtr);
 
  };

};